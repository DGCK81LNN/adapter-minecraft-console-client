import { Context, Dict, uncapitalize } from "koishi"
import { MCCBot } from "./bot"

class _events {
  OnWsRestarting: void
  OnWsConnectionClose: void
  OnGameJoined: void
  OnBlockBreakAnimation: { entity: Entity; location: Location; stage: number }
  OnEntityAnimation: { entity: Entity; animation: number }
  OnChatPrivate: { sender: string; message: string; rawText: string }
  OnChatPublic: { username: string; message: string; rawText: string }
  OnTeleportRequest: { sender: string; rawText: string }
  OnChatRaw: { text: string; json?: string }
  OnDisconnect: { reason: string; message: string }
  OnPlayerProperty: Dict<number>
  OnServerTpsUpdate: { tps: number }
  OnTimeUpdate: { worldAge: number; timeOfDay: number }
  OnEntityMove: Entity
  OnInternalCommand: { command: string; parameters: string; result: string }
  OnEntitySpawn: Entity
  OnEntityDespawn: Entity
  OnHeldItemChange: { itemSlot: number }
  OnHealthUpdate: { health: number; food: number }
  OnExplosion: { location: Location; strength: number; recordCount: number }
  OnSetExperience: { experienceBar: number; level: number; totalExperience: number }
  OnGamemodeUpdate: { playerName: string; uuid: string; gameMode: GameMode }
  OnLatencyUpdate: { playerName: string; uuid: string; latency: number }
  OnMapData: {
    mapId: number
    scale: number
    trackingPosition: boolean
    locked: boolean
    icons: MapIcon[]
    columnsUpdated: number
    rowsUpdated: number
    mapColumnX: number
    mapRowZ: number
    colors: number[]
  }
  OnTradeList: { windowId: number; trades: any[]; villagerInfo: any }
  OnTitle: {
    action: number
    titleText: string
    subtitleText: string
    actionBarText: string
    fadeIn: number
    stay: number
    fadeout: number
    rawJson: string
  }
  OnEntityEquipment: { entity: Entity; slot: number; item?: Item }
  OnEntityEffect: {
    entity: Entity
    effect: string
    amplifier: number
    duration: number
    flags: number
  }
  OnScoreboardObjective: {
    objectiveName: string
    mode: number
    objectiveValue: string
    type: number
    rawJson: string
    numberFormat: number
  }
  OnUpdateScore: {
    entityName: string
    action: number
    objectiveName: string
    objectiveDisplayName: string
    type: number
    numberFormat: number
  }
  OnInventoryUpdate: { inventoryId: number }
  OnInventoryOpen: { inventoryId: number }
  OnInventoryClose: { inventoryId: number }
  OnPlayerJoin: { uuid: string; name: string }
  OnPlayerLeave: { uuid: string; name: string }
  OnDeath: void
  OnRespawn: void
  OnEntityHealth: { entity: Entity; health: number }
  OnEntityMetadata: { entity: Entity; metadata: Entity["Metadata"] }
  OnPlayerStatus: { statusId: number }
  OnNetworkPacket: {
    packetId: number
    isLogin: boolean
    isInbound: boolean
    packetData: number[]
  }
  OnWsCommandResponse: {
    success: boolean
    requestId: string
    command: string
    result: any
    message?: string
    stackTrace?: string
  }
  OnMccCommandResponse: { response: string }
}
export type Events = { [K in keyof _events]: _events[K] }
export const eventNames = Object.keys(new _events())

export const convertedEvents = [
  "OnChatPublic",
  "OnChatPrivate",
  "OnPlayerJoin",
  "OnPlayerLeave",
] as const
export type ConvertedEvents = (typeof convertedEvents)[number]

export const alwaysReceiveEvents = [...convertedEvents, "OnWsCommandResponse"] as const
export type AlwaysReceiveEvents = (typeof alwaysReceiveEvents)[number]

export interface Payload<T extends keyof Events = keyof Events> {
  event: T
  data: Events[T]
}

class _commands {
  ChangeSessionId: (sessionId: string) => string
  Authenticate: (password: string) => string
  LogToConsole: (message: string) => string
  LogDebugToConsole: (message: string) => string
  LogToConsoleTranslated: (message: string) => string
  LogDebugToConsoleTranslated: (message: string) => string
  ReconnectToTheServer: (extraAttempts: number, delaySeconds: number) => true
  DisconnectAndExit: () => true
  SendPrivateMessage: (playerName: string, message: string) => true
  RunScript: (filename: string) => true
  GetTerrainEnabled: () => boolean
  SetTerrainEnabled: (enabled: boolean) => true
  GetEntityHandlingEnabled: () => boolean
  Sneak: (on: boolean) => true
  SendEntityAction: (actionType: EntityActionType) => true
  DigBlock: (
    x: number,
    y: number,
    z: number,
    swingArms?: boolean,
    lookAtBlock?: boolean
  ) => boolean
  SetSlot: (slotNumber: string) => true
  GetWorld: () => { chunkCnt: boolean; chunkLoadNotCompleted: boolean }
  GetEntities: () => Record<number, Entity>
  GetPlayersLatency: () => Record<number, number>
  GetCurrentLocation: () => Location
  MoveToLocation: (
    x: number,
    y: number,
    z: number,
    allowUnsafe?: boolean,
    allowDirectTeleport?: boolean,
    maxOffset?: number,
    minoffset?: number,
    timeout?: number
  ) => boolean
  ClientIsMoving: () => boolean
  LookAtLocation: (x: number, y: number, z: number) => true
  GetTimestamp: () => number
  GetServerPort: () => number
  GetServerHost: () => string
  GetUsername: () => string
  GetGamemode: () => GameMode
  GetYaw: () => number
  GetPitch: () => number
  GetUserUUID: () => string
  GetOnlinePlayers: () => string[]
  GetOnlinePlayersWithUUID: () => Dict<string>
  GetServerTPS: () => number
  InteractEntity: (
    entityId: number,
    interactionType: InteractType,
    hand?: Hand
  ) => boolean
  CreativeGive: (slotId: number, itemType: ItemType, count: number, nbt?: any) => boolean
  CreativeDelete: (slotId: number) => boolean
  SendAnimation: (hand?: Hand) => boolean
  SendPlaceBlock: (
    x: number,
    y: number,
    z: number,
    direction: Direction,
    hand?: Hand
  ) => boolean
  UseItemInHand: () => boolean
  GetInventoryEnabled: () => boolean
  GetPlayerInventory: () => Inventory
  GetInventories: () => Record<number, Inventory>
  WindowAction: (
    windowId: number,
    slotId: number,
    windowActionType: WindowActionType
  ) => boolean
  ChangeSlot: (slotNumber: string) => true
  GetCurrentSlot: () => number
  ClearInventories: () => boolean
  UpdateSign: (
    x: number,
    y: number,
    z: number,
    line1: string,
    line2: string,
    line3: string,
    line4: string
  ) => boolean
  SelectTrade: (selectedSlot: number) => boolean
  UpdateCommandBlock: (
    x: number,
    y: number,
    z: number,
    command: string,
    mode: CommandBlockMode,
    flags: CommandBlockFlags
  ) => boolean
  CloseInventory: (inventoryId: number) => boolean
  GetMaxChatMessageLength: () => number
  Respawn: () => boolean
  GetProtocolVersion: () => number
}
export type Commands = { [K in keyof _commands]: _commands[K] }
export const commandNames = Object.keys(new _commands())

type _internal = {
  [K in keyof Commands as Uncapitalize<K>]: (
    ...args: Parameters<Commands[K]>
  ) => Promise<ReturnType<Commands[K]>>
}
export class Internal {
  constructor(public readonly bot: MCCBot<Context>) {}

  _send: (data: string) => void = null
  _wsCommand: (
    command: string,
    ...parameters: unknown[]
  ) => Promise<Events["OnWsCommandResponse"]> = null

  protected static define(command: string) {
    this.prototype[uncapitalize(command)] = async function (
      this: Internal,
      ...parameters: any[]
    ) {
      const response = await this._wsCommand(command, ...parameters)
      if (!response.success) throw new SenderError(command, parameters, response)
      return response.result
    }
  }
  static {
    for (const name of commandNames) Internal.define(name)
  }
}
export interface Internal extends _internal {}

function formatCommand(command: string, parameters: unknown[]) {
  if (!parameters.length || command === "Authenticate") return command
  return `${command}(${parameters.map(x => JSON.stringify(x)).join(",")})`
}
function defineUnenumerableProperties(thing: object, props: Dict<unknown>) {
  for (const [key, value] of Object.entries(props))
    Object.defineProperty(thing, key, { value, configurable: true, writable: true })
}

export class TimeoutError extends Error {
  constructor(command: string, parameters: unknown[]) {
    super(`${formatCommand(command, parameters)} timeout`)
    defineUnenumerableProperties(this, { parameters, command })
  }
}

export class SenderError extends Error {
  constructor(
    command: string,
    parameters: unknown[],
    response: Events["OnWsCommandResponse"]
  ) {
    const message = response.result
    super(`${formatCommand(command, parameters)} failed: ${message}`)
    defineUnenumerableProperties(this, { parameters, command, response })
  }
}

// Below come all the enums and interfaces ðŸ’©

export enum CommandBlockFlags {
  TrackOutput = 0x01,
  IsConditional = 0x02,
  Automatic = 0x04,
}

export enum CommandBlockMode {
  Sequence = 0,
  Auto = 1,
  Redstone = 2,
}

export enum Direction {
  South = 0,
  West = 1,
  North = 2,
  East = 3,

  Up = 4,
  Down = 5,

  NorthEast = 6,
  SouthEast = 7,
  SouthWest = 8,
  NorthWest = 9,
}

export enum EntityType {
  Allay,
  AreaEffectCloud,
  ArmorStand,
  Arrow,
  Axolotl,
  Bat,
  Bee,
  Blaze,
  BlockDisplay,
  Boat,
  Breeze,
  Camel,
  Cat,
  CaveSpider,
  ChestBoat,
  ChestMinecart,
  Chicken,
  Cod,
  CommandBlockMinecart,
  Cow,
  Creeper,
  Dolphin,
  Donkey,
  DragonFireball,
  Drowned,
  Egg,
  ElderGuardian,
  EndCrystal,
  EnderDragon,
  EnderPearl,
  Enderman,
  Endermite,
  Evoker,
  EvokerFangs,
  ExperienceBottle,
  ExperienceOrb,
  EyeOfEnder,
  FallingBlock,
  Fireball,
  FireworkRocket,
  FishingBobber,
  Fox,
  Frog,
  FurnaceMinecart,
  Ghast,
  Giant,
  GlowItemFrame,
  GlowSquid,
  Goat,
  Guardian,
  Hoglin,
  HopperMinecart,
  Horse,
  Husk,
  Illusioner,
  Interaction,
  IronGolem,
  Item,
  ItemDisplay,
  ItemFrame,
  LeashKnot,
  LightningBolt,
  Llama,
  LlamaSpit,
  MagmaCube,
  Marker,
  Minecart,
  Mooshroom,
  Mule,
  Ocelot,
  Painting,
  Panda,
  Parrot,
  Phantom,
  Pig,
  Piglin,
  PiglinBrute,
  Pillager,
  Player,
  PolarBear,
  Potion,
  Pufferfish,
  Rabbit,
  Ravager,
  Salmon,
  Sheep,
  Shulker,
  ShulkerBullet,
  Silverfish,
  Skeleton,
  SkeletonHorse,
  Slime,
  SmallFireball,
  Sniffer,
  SnowGolem,
  Snowball,
  SpawnerMinecart,
  SpectralArrow,
  Spider,
  Squid,
  Stray,
  Strider,
  Tadpole,
  TextDisplay,
  Tnt,
  TntMinecart,
  TraderLlama,
  Trident,
  TropicalFish,
  Turtle,
  Vex,
  Villager,
  Vindicator,
  WanderingTrader,
  Warden,
  WindCharge,
  Witch,
  Wither,
  WitherSkeleton,
  WitherSkull,
  Wolf,
  Zoglin,
  Zombie,
  ZombieHorse,
  ZombieVillager,
  ZombifiedPiglin,
}

export enum EntityPose {
  Standing = 0,
  FallFlying = 1,
  Sleeping = 2,
  Swimming = 3,
  SpinAttack = 4,
  Sneaking = 5,
  Dying = 6,
}

export interface Entity {
  ID: number
  UUID: string
  Name?: string
  CustomNameJson?: string
  IsCustomNameVisible: boolean
  CustomName?: string
  Latency: number
  Type: EntityType
  Location: Location
  Yaw: number
  Pitch: number
  ObjectData: number
  Health: number
  Item: Item
  Pose: EntityPose
  Metadata: any
  Equipment: Record<number, Item>
}

export enum EntityActionType {
  StartSneaking = 0,
  StopSneaking = 1,
  LeaveBed = 2,
  StartSprinting = 3,
  StopSprinting = 4,
  StartJumpWithHorse = 5,
  StopJumpWithHorse = 6,
  OpenHorseInventory = 7,
  StartFlyingWithElytra = 8,
}

export enum Hand {
  MainHand = 0,
  OffHand = 1,
}

export enum InteractType {
  Interact = 0,
  Attack,
  InteractAt,
}

export enum ItemType {
  Unknown = -2, // Unsupported item type (Forge mod custom item...)
  Null = -1, // Unspecified item type (Used in the network protocol)

  AcaciaBoat,
  AcaciaButton,
  AcaciaChestBoat,
  AcaciaDoor,
  AcaciaFence,
  AcaciaFenceGate,
  AcaciaHangingSign,
  AcaciaLeaves,
  AcaciaLog,
  AcaciaPlanks,
  AcaciaPressurePlate,
  AcaciaSapling,
  AcaciaSign,
  AcaciaSlab,
  AcaciaStairs,
  AcaciaTrapdoor,
  AcaciaWood,
  ActivatorRail,
  Air,
  AllaySpawnEgg,
  Allium,
  AmethystBlock,
  AmethystCluster,
  AmethystShard,
  AncientDebris,
  Andesite,
  AndesiteSlab,
  AndesiteStairs,
  AndesiteWall,
  AnglerPotterySherd,
  Anvil,
  Apple,
  ArcherPotterySherd,
  ArmorStand,
  ArmsUpPotterySherd,
  Arrow,
  AxolotlBucket,
  AxolotlSpawnEgg,
  Azalea,
  AzaleaLeaves,
  AzureBluet,
  BakedPotato,
  Bamboo,
  BambooBlock,
  BambooButton,
  BambooChestRaft,
  BambooDoor,
  BambooFence,
  BambooFenceGate,
  BambooHangingSign,
  BambooMosaic,
  BambooMosaicSlab,
  BambooMosaicStairs,
  BambooPlanks,
  BambooPressurePlate,
  BambooRaft,
  BambooSign,
  BambooSlab,
  BambooStairs,
  BambooTrapdoor,
  Barrel,
  Barrier,
  Basalt,
  BatSpawnEgg,
  Beacon,
  Bedrock,
  BeeNest,
  BeeSpawnEgg,
  Beef,
  Beehive,
  Beetroot,
  BeetrootSeeds,
  BeetrootSoup,
  Bell,
  BigDripleaf,
  BirchBoat,
  BirchButton,
  BirchChestBoat,
  BirchDoor,
  BirchFence,
  BirchFenceGate,
  BirchHangingSign,
  BirchLeaves,
  BirchLog,
  BirchPlanks,
  BirchPressurePlate,
  BirchSapling,
  BirchSign,
  BirchSlab,
  BirchStairs,
  BirchTrapdoor,
  BirchWood,
  BlackBanner,
  BlackBed,
  BlackCandle,
  BlackCarpet,
  BlackConcrete,
  BlackConcretePowder,
  BlackDye,
  BlackGlazedTerracotta,
  BlackShulkerBox,
  BlackStainedGlass,
  BlackStainedGlassPane,
  BlackTerracotta,
  BlackWool,
  Blackstone,
  BlackstoneSlab,
  BlackstoneStairs,
  BlackstoneWall,
  BladePotterySherd,
  BlastFurnace,
  BlazePowder,
  BlazeRod,
  BlazeSpawnEgg,
  BlueBanner,
  BlueBed,
  BlueCandle,
  BlueCarpet,
  BlueConcrete,
  BlueConcretePowder,
  BlueDye,
  BlueGlazedTerracotta,
  BlueIce,
  BlueOrchid,
  BlueShulkerBox,
  BlueStainedGlass,
  BlueStainedGlassPane,
  BlueTerracotta,
  BlueWool,
  Bone,
  BoneBlock,
  BoneMeal,
  Book,
  Bookshelf,
  Bow,
  Bowl,
  BrainCoral,
  BrainCoralBlock,
  BrainCoralFan,
  Bread,
  BreezeSpawnEgg,
  BrewerPotterySherd,
  BrewingStand,
  Brick,
  BrickSlab,
  BrickStairs,
  BrickWall,
  Bricks,
  BrownBanner,
  BrownBed,
  BrownCandle,
  BrownCarpet,
  BrownConcrete,
  BrownConcretePowder,
  BrownDye,
  BrownGlazedTerracotta,
  BrownMushroom,
  BrownMushroomBlock,
  BrownShulkerBox,
  BrownStainedGlass,
  BrownStainedGlassPane,
  BrownTerracotta,
  BrownWool,
  Brush,
  BubbleCoral,
  BubbleCoralBlock,
  BubbleCoralFan,
  Bucket,
  BuddingAmethyst,
  Bundle,
  BurnPotterySherd,
  Cactus,
  Cake,
  Calcite,
  CalibratedSculkSensor,
  CamelSpawnEgg,
  Campfire,
  Candle,
  Carrot,
  CarrotOnAStick,
  CartographyTable,
  CarvedPumpkin,
  CatSpawnEgg,
  Cauldron,
  CaveSpiderSpawnEgg,
  Chain,
  ChainCommandBlock,
  ChainmailBoots,
  ChainmailChestplate,
  ChainmailHelmet,
  ChainmailLeggings,
  Charcoal,
  CherryBoat,
  CherryButton,
  CherryChestBoat,
  CherryDoor,
  CherryFence,
  CherryFenceGate,
  CherryHangingSign,
  CherryLeaves,
  CherryLog,
  CherryPlanks,
  CherryPressurePlate,
  CherrySapling,
  CherrySign,
  CherrySlab,
  CherryStairs,
  CherryTrapdoor,
  CherryWood,
  Chest,
  ChestMinecart,
  Chicken,
  ChickenSpawnEgg,
  ChippedAnvil,
  ChiseledBookshelf,
  ChiseledCopper,
  ChiseledDeepslate,
  ChiseledNetherBricks,
  ChiseledPolishedBlackstone,
  ChiseledQuartzBlock,
  ChiseledRedSandstone,
  ChiseledSandstone,
  ChiseledStoneBricks,
  ChiseledTuff,
  ChiseledTuffBricks,
  ChorusFlower,
  ChorusFruit,
  ChorusPlant,
  Clay,
  ClayBall,
  Clock,
  Coal,
  CoalBlock,
  CoalOre,
  CoarseDirt,
  CoastArmorTrimSmithingTemplate,
  CobbledDeepslate,
  CobbledDeepslateSlab,
  CobbledDeepslateStairs,
  CobbledDeepslateWall,
  Cobblestone,
  CobblestoneSlab,
  CobblestoneStairs,
  CobblestoneWall,
  Cobweb,
  CocoaBeans,
  Cod,
  CodBucket,
  CodSpawnEgg,
  CommandBlock,
  CommandBlockMinecart,
  Comparator,
  Compass,
  Composter,
  Conduit,
  CookedBeef,
  CookedChicken,
  CookedCod,
  CookedMutton,
  CookedPorkchop,
  CookedRabbit,
  CookedSalmon,
  Cookie,
  CopperBlock,
  CopperBulb,
  CopperDoor,
  CopperGrate,
  CopperIngot,
  CopperOre,
  CopperTrapdoor,
  Cornflower,
  CowSpawnEgg,
  CrackedDeepslateBricks,
  CrackedDeepslateTiles,
  CrackedNetherBricks,
  CrackedPolishedBlackstoneBricks,
  CrackedStoneBricks,
  Crafter,
  CraftingTable,
  CreeperBannerPattern,
  CreeperHead,
  CreeperSpawnEgg,
  CrimsonButton,
  CrimsonDoor,
  CrimsonFence,
  CrimsonFenceGate,
  CrimsonFungus,
  CrimsonHangingSign,
  CrimsonHyphae,
  CrimsonNylium,
  CrimsonPlanks,
  CrimsonPressurePlate,
  CrimsonRoots,
  CrimsonSign,
  CrimsonSlab,
  CrimsonStairs,
  CrimsonStem,
  CrimsonTrapdoor,
  Crossbow,
  CryingObsidian,
  CutCopper,
  CutCopperSlab,
  CutCopperStairs,
  CutRedSandstone,
  CutRedSandstoneSlab,
  CutSandstone,
  CutSandstoneSlab,
  CyanBanner,
  CyanBed,
  CyanCandle,
  CyanCarpet,
  CyanConcrete,
  CyanConcretePowder,
  CyanDye,
  CyanGlazedTerracotta,
  CyanShulkerBox,
  CyanStainedGlass,
  CyanStainedGlassPane,
  CyanTerracotta,
  CyanWool,
  DamagedAnvil,
  Dandelion,
  DangerPotterySherd,
  DarkOakBoat,
  DarkOakButton,
  DarkOakChestBoat,
  DarkOakDoor,
  DarkOakFence,
  DarkOakFenceGate,
  DarkOakHangingSign,
  DarkOakLeaves,
  DarkOakLog,
  DarkOakPlanks,
  DarkOakPressurePlate,
  DarkOakSapling,
  DarkOakSign,
  DarkOakSlab,
  DarkOakStairs,
  DarkOakTrapdoor,
  DarkOakWood,
  DarkPrismarine,
  DarkPrismarineSlab,
  DarkPrismarineStairs,
  DaylightDetector,
  DeadBrainCoral,
  DeadBrainCoralBlock,
  DeadBrainCoralFan,
  DeadBubbleCoral,
  DeadBubbleCoralBlock,
  DeadBubbleCoralFan,
  DeadBush,
  DeadFireCoral,
  DeadFireCoralBlock,
  DeadFireCoralFan,
  DeadHornCoral,
  DeadHornCoralBlock,
  DeadHornCoralFan,
  DeadTubeCoral,
  DeadTubeCoralBlock,
  DeadTubeCoralFan,
  DebugStick,
  DecoratedPot,
  Deepslate,
  DeepslateBrickSlab,
  DeepslateBrickStairs,
  DeepslateBrickWall,
  DeepslateBricks,
  DeepslateCoalOre,
  DeepslateCopperOre,
  DeepslateDiamondOre,
  DeepslateEmeraldOre,
  DeepslateGoldOre,
  DeepslateIronOre,
  DeepslateLapisOre,
  DeepslateRedstoneOre,
  DeepslateTileSlab,
  DeepslateTileStairs,
  DeepslateTileWall,
  DeepslateTiles,
  DetectorRail,
  Diamond,
  DiamondAxe,
  DiamondBlock,
  DiamondBoots,
  DiamondChestplate,
  DiamondHelmet,
  DiamondHoe,
  DiamondHorseArmor,
  DiamondLeggings,
  DiamondOre,
  DiamondPickaxe,
  DiamondShovel,
  DiamondSword,
  Diorite,
  DioriteSlab,
  DioriteStairs,
  DioriteWall,
  Dirt,
  DirtPath,
  DiscFragment5,
  Dispenser,
  DolphinSpawnEgg,
  DonkeySpawnEgg,
  DragonBreath,
  DragonEgg,
  DragonHead,
  DriedKelp,
  DriedKelpBlock,
  DripstoneBlock,
  Dropper,
  DrownedSpawnEgg,
  DuneArmorTrimSmithingTemplate,
  EchoShard,
  Egg,
  ElderGuardianSpawnEgg,
  Elytra,
  Emerald,
  EmeraldBlock,
  EmeraldOre,
  EnchantedBook,
  EnchantedGoldenApple,
  EnchantingTable,
  EndCrystal,
  EndPortalFrame,
  EndRod,
  EndStone,
  EndStoneBrickSlab,
  EndStoneBrickStairs,
  EndStoneBrickWall,
  EndStoneBricks,
  EnderChest,
  EnderDragonSpawnEgg,
  EnderEye,
  EnderPearl,
  EndermanSpawnEgg,
  EndermiteSpawnEgg,
  EvokerSpawnEgg,
  ExperienceBottle,
  ExplorerPotterySherd,
  ExposedChiseledCopper,
  ExposedCopper,
  ExposedCopperBulb,
  ExposedCopperDoor,
  ExposedCopperGrate,
  ExposedCopperTrapdoor,
  ExposedCutCopper,
  ExposedCutCopperSlab,
  ExposedCutCopperStairs,
  EyeArmorTrimSmithingTemplate,
  Farmland,
  Feather,
  FermentedSpiderEye,
  Fern,
  FilledMap,
  FireCharge,
  FireCoral,
  FireCoralBlock,
  FireCoralFan,
  FireworkRocket,
  FireworkStar,
  FishingRod,
  FletchingTable,
  Flint,
  FlintAndSteel,
  FlowerBannerPattern,
  FlowerPot,
  FloweringAzalea,
  FloweringAzaleaLeaves,
  FoxSpawnEgg,
  FriendPotterySherd,
  FrogSpawnEgg,
  Frogspawn,
  Furnace,
  FurnaceMinecart,
  GhastSpawnEgg,
  GhastTear,
  GildedBlackstone,
  Glass,
  GlassBottle,
  GlassPane,
  GlisteringMelonSlice,
  GlobeBannerPattern,
  GlowBerries,
  GlowInkSac,
  GlowItemFrame,
  GlowLichen,
  GlowSquidSpawnEgg,
  Glowstone,
  GlowstoneDust,
  GoatHorn,
  GoatSpawnEgg,
  GoldBlock,
  GoldIngot,
  GoldNugget,
  GoldOre,
  GoldenApple,
  GoldenAxe,
  GoldenBoots,
  GoldenCarrot,
  GoldenChestplate,
  GoldenHelmet,
  GoldenHoe,
  GoldenHorseArmor,
  GoldenLeggings,
  GoldenPickaxe,
  GoldenShovel,
  GoldenSword,
  Granite,
  GraniteSlab,
  GraniteStairs,
  GraniteWall,
  Grass, // 1.20.3+ renamed to ShortGrass
  GrassBlock,
  Gravel,
  GrayBanner,
  GrayBed,
  GrayCandle,
  GrayCarpet,
  GrayConcrete,
  GrayConcretePowder,
  GrayDye,
  GrayGlazedTerracotta,
  GrayShulkerBox,
  GrayStainedGlass,
  GrayStainedGlassPane,
  GrayTerracotta,
  GrayWool,
  GreenBanner,
  GreenBed,
  GreenCandle,
  GreenCarpet,
  GreenConcrete,
  GreenConcretePowder,
  GreenDye,
  GreenGlazedTerracotta,
  GreenShulkerBox,
  GreenStainedGlass,
  GreenStainedGlassPane,
  GreenTerracotta,
  GreenWool,
  Grindstone,
  GuardianSpawnEgg,
  Gunpowder,
  HangingRoots,
  HayBlock,
  HeartOfTheSea,
  HeartPotterySherd,
  HeartbreakPotterySherd,
  HeavyWeightedPressurePlate,
  HoglinSpawnEgg,
  HoneyBlock,
  HoneyBottle,
  Honeycomb,
  HoneycombBlock,
  Hopper,
  HopperMinecart,
  HornCoral,
  HornCoralBlock,
  HornCoralFan,
  HorseSpawnEgg,
  HostArmorTrimSmithingTemplate,
  HowlPotterySherd,
  HuskSpawnEgg,
  Ice,
  InfestedChiseledStoneBricks,
  InfestedCobblestone,
  InfestedCrackedStoneBricks,
  InfestedDeepslate,
  InfestedMossyStoneBricks,
  InfestedStone,
  InfestedStoneBricks,
  InkSac,
  IronAxe,
  IronBars,
  IronBlock,
  IronBoots,
  IronChestplate,
  IronDoor,
  IronGolemSpawnEgg,
  IronHelmet,
  IronHoe,
  IronHorseArmor,
  IronIngot,
  IronLeggings,
  IronNugget,
  IronOre,
  IronPickaxe,
  IronShovel,
  IronSword,
  IronTrapdoor,
  ItemFrame,
  JackOLantern,
  Jigsaw,
  Jukebox,
  JungleBoat,
  JungleButton,
  JungleChestBoat,
  JungleDoor,
  JungleFence,
  JungleFenceGate,
  JungleHangingSign,
  JungleLeaves,
  JungleLog,
  JunglePlanks,
  JunglePressurePlate,
  JungleSapling,
  JungleSign,
  JungleSlab,
  JungleStairs,
  JungleTrapdoor,
  JungleWood,
  Kelp,
  KnowledgeBook,
  Ladder,
  Lantern,
  LapisBlock,
  LapisLazuli,
  LapisOre,
  LargeAmethystBud,
  LargeFern,
  LavaBucket,
  Lead,
  Leather,
  LeatherBoots,
  LeatherChestplate,
  LeatherHelmet,
  LeatherHorseArmor,
  LeatherLeggings,
  Lectern,
  Lever,
  Light,
  LightBlueBanner,
  LightBlueBed,
  LightBlueCandle,
  LightBlueCarpet,
  LightBlueConcrete,
  LightBlueConcretePowder,
  LightBlueDye,
  LightBlueGlazedTerracotta,
  LightBlueShulkerBox,
  LightBlueStainedGlass,
  LightBlueStainedGlassPane,
  LightBlueTerracotta,
  LightBlueWool,
  LightGrayBanner,
  LightGrayBed,
  LightGrayCandle,
  LightGrayCarpet,
  LightGrayConcrete,
  LightGrayConcretePowder,
  LightGrayDye,
  LightGrayGlazedTerracotta,
  LightGrayShulkerBox,
  LightGrayStainedGlass,
  LightGrayStainedGlassPane,
  LightGrayTerracotta,
  LightGrayWool,
  LightWeightedPressurePlate,
  LightningRod,
  Lilac,
  LilyOfTheValley,
  LilyPad,
  LimeBanner,
  LimeBed,
  LimeCandle,
  LimeCarpet,
  LimeConcrete,
  LimeConcretePowder,
  LimeDye,
  LimeGlazedTerracotta,
  LimeShulkerBox,
  LimeStainedGlass,
  LimeStainedGlassPane,
  LimeTerracotta,
  LimeWool,
  LingeringPotion,
  LlamaSpawnEgg,
  Lodestone,
  Loom,
  MagentaBanner,
  MagentaBed,
  MagentaCandle,
  MagentaCarpet,
  MagentaConcrete,
  MagentaConcretePowder,
  MagentaDye,
  MagentaGlazedTerracotta,
  MagentaShulkerBox,
  MagentaStainedGlass,
  MagentaStainedGlassPane,
  MagentaTerracotta,
  MagentaWool,
  MagmaBlock,
  MagmaCream,
  MagmaCubeSpawnEgg,
  MangroveBoat,
  MangroveButton,
  MangroveChestBoat,
  MangroveDoor,
  MangroveFence,
  MangroveFenceGate,
  MangroveHangingSign,
  MangroveLeaves,
  MangroveLog,
  MangrovePlanks,
  MangrovePressurePlate,
  MangrovePropagule,
  MangroveRoots,
  MangroveSign,
  MangroveSlab,
  MangroveStairs,
  MangroveTrapdoor,
  MangroveWood,
  Map,
  MediumAmethystBud,
  Melon,
  MelonSeeds,
  MelonSlice,
  MilkBucket,
  Minecart,
  MinerPotterySherd,
  MojangBannerPattern,
  MooshroomSpawnEgg,
  MossBlock,
  MossCarpet,
  MossyCobblestone,
  MossyCobblestoneSlab,
  MossyCobblestoneStairs,
  MossyCobblestoneWall,
  MossyStoneBrickSlab,
  MossyStoneBrickStairs,
  MossyStoneBrickWall,
  MossyStoneBricks,
  MournerPotterySherd,
  Mud,
  MudBrickSlab,
  MudBrickStairs,
  MudBrickWall,
  MudBricks,
  MuddyMangroveRoots,
  MuleSpawnEgg,
  MushroomStem,
  MushroomStew,
  MusicDisc11,
  MusicDisc13,
  MusicDisc5,
  MusicDiscBlocks,
  MusicDiscCat,
  MusicDiscChirp,
  MusicDiscFar,
  MusicDiscMall,
  MusicDiscMellohi,
  MusicDiscOtherside,
  MusicDiscPigstep,
  MusicDiscRelic,
  MusicDiscStal,
  MusicDiscStrad,
  MusicDiscWait,
  MusicDiscWard,
  Mutton,
  Mycelium,
  NameTag,
  NautilusShell,
  NetherBrick,
  NetherBrickFence,
  NetherBrickSlab,
  NetherBrickStairs,
  NetherBrickWall,
  NetherBricks,
  NetherGoldOre,
  NetherQuartzOre,
  NetherSprouts,
  NetherStar,
  NetherWart,
  NetherWartBlock,
  NetheriteAxe,
  NetheriteBlock,
  NetheriteBoots,
  NetheriteChestplate,
  NetheriteHelmet,
  NetheriteHoe,
  NetheriteIngot,
  NetheriteLeggings,
  NetheritePickaxe,
  NetheriteScrap,
  NetheriteShovel,
  NetheriteSword,
  NetheriteUpgradeSmithingTemplate,
  Netherrack,
  NoteBlock,
  OakBoat,
  OakButton,
  OakChestBoat,
  OakDoor,
  OakFence,
  OakFenceGate,
  OakHangingSign,
  OakLeaves,
  OakLog,
  OakPlanks,
  OakPressurePlate,
  OakSapling,
  OakSign,
  OakSlab,
  OakStairs,
  OakTrapdoor,
  OakWood,
  Observer,
  Obsidian,
  OcelotSpawnEgg,
  OchreFroglight,
  OrangeBanner,
  OrangeBed,
  OrangeCandle,
  OrangeCarpet,
  OrangeConcrete,
  OrangeConcretePowder,
  OrangeDye,
  OrangeGlazedTerracotta,
  OrangeShulkerBox,
  OrangeStainedGlass,
  OrangeStainedGlassPane,
  OrangeTerracotta,
  OrangeTulip,
  OrangeWool,
  OxeyeDaisy,
  OxidizedChiseledCopper,
  OxidizedCopper,
  OxidizedCopperBulb,
  OxidizedCopperDoor,
  OxidizedCopperGrate,
  OxidizedCopperTrapdoor,
  OxidizedCutCopper,
  OxidizedCutCopperSlab,
  OxidizedCutCopperStairs,
  PackedIce,
  PackedMud,
  Painting,
  PandaSpawnEgg,
  Paper,
  ParrotSpawnEgg,
  PearlescentFroglight,
  Peony,
  PetrifiedOakSlab,
  PhantomMembrane,
  PhantomSpawnEgg,
  PigSpawnEgg,
  PiglinBannerPattern,
  PiglinBruteSpawnEgg,
  PiglinHead,
  PiglinSpawnEgg,
  PillagerSpawnEgg,
  PinkBanner,
  PinkBed,
  PinkCandle,
  PinkCarpet,
  PinkConcrete,
  PinkConcretePowder,
  PinkDye,
  PinkGlazedTerracotta,
  PinkPetals,
  PinkShulkerBox,
  PinkStainedGlass,
  PinkStainedGlassPane,
  PinkTerracotta,
  PinkTulip,
  PinkWool,
  Piston,
  PitcherPlant,
  PitcherPod,
  PlayerHead,
  PlentyPotterySherd,
  Podzol,
  PointedDripstone,
  PoisonousPotato,
  PolarBearSpawnEgg,
  PolishedAndesite,
  PolishedAndesiteSlab,
  PolishedAndesiteStairs,
  PolishedBasalt,
  PolishedBlackstone,
  PolishedBlackstoneBrickSlab,
  PolishedBlackstoneBrickStairs,
  PolishedBlackstoneBrickWall,
  PolishedBlackstoneBricks,
  PolishedBlackstoneButton,
  PolishedBlackstonePressurePlate,
  PolishedBlackstoneSlab,
  PolishedBlackstoneStairs,
  PolishedBlackstoneWall,
  PolishedDeepslate,
  PolishedDeepslateSlab,
  PolishedDeepslateStairs,
  PolishedDeepslateWall,
  PolishedDiorite,
  PolishedDioriteSlab,
  PolishedDioriteStairs,
  PolishedGranite,
  PolishedGraniteSlab,
  PolishedGraniteStairs,
  PolishedTuff,
  PolishedTuffSlab,
  PolishedTuffStairs,
  PolishedTuffWall,
  PoppedChorusFruit,
  Poppy,
  Porkchop,
  Potato,
  Potion,
  PowderSnowBucket,
  PoweredRail,
  Prismarine,
  PrismarineBrickSlab,
  PrismarineBrickStairs,
  PrismarineBricks,
  PrismarineCrystals,
  PrismarineShard,
  PrismarineSlab,
  PrismarineStairs,
  PrismarineWall,
  PrizePotterySherd,
  Pufferfish,
  PufferfishBucket,
  PufferfishSpawnEgg,
  Pumpkin,
  PumpkinPie,
  PumpkinSeeds,
  PurpleBanner,
  PurpleBed,
  PurpleCandle,
  PurpleCarpet,
  PurpleConcrete,
  PurpleConcretePowder,
  PurpleDye,
  PurpleGlazedTerracotta,
  PurpleShulkerBox,
  PurpleStainedGlass,
  PurpleStainedGlassPane,
  PurpleTerracotta,
  PurpleWool,
  PurpurBlock,
  PurpurPillar,
  PurpurSlab,
  PurpurStairs,
  Quartz,
  QuartzBlock,
  QuartzBricks,
  QuartzPillar,
  QuartzSlab,
  QuartzStairs,
  Rabbit,
  RabbitFoot,
  RabbitHide,
  RabbitSpawnEgg,
  RabbitStew,
  Rail,
  RaiserArmorTrimSmithingTemplate,
  RavagerSpawnEgg,
  RawCopper,
  RawCopperBlock,
  RawGold,
  RawGoldBlock,
  RawIron,
  RawIronBlock,
  RecoveryCompass,
  RedBanner,
  RedBed,
  RedCandle,
  RedCarpet,
  RedConcrete,
  RedConcretePowder,
  RedDye,
  RedGlazedTerracotta,
  RedMushroom,
  RedMushroomBlock,
  RedNetherBrickSlab,
  RedNetherBrickStairs,
  RedNetherBrickWall,
  RedNetherBricks,
  RedSand,
  RedSandstone,
  RedSandstoneSlab,
  RedSandstoneStairs,
  RedSandstoneWall,
  RedShulkerBox,
  RedStainedGlass,
  RedStainedGlassPane,
  RedTerracotta,
  RedTulip,
  RedWool,
  Redstone,
  RedstoneBlock,
  RedstoneLamp,
  RedstoneOre,
  RedstoneTorch,
  ReinforcedDeepslate,
  Repeater,
  RepeatingCommandBlock,
  RespawnAnchor,
  RibArmorTrimSmithingTemplate,
  RootedDirt,
  RoseBush,
  RottenFlesh,
  Saddle,
  Salmon,
  SalmonBucket,
  SalmonSpawnEgg,
  Sand,
  Sandstone,
  SandstoneSlab,
  SandstoneStairs,
  SandstoneWall,
  Scaffolding,
  Sculk,
  SculkCatalyst,
  SculkSensor,
  SculkShrieker,
  SculkVein,
  Scute,
  SeaLantern,
  SeaPickle,
  Seagrass,
  SentryArmorTrimSmithingTemplate,
  ShaperArmorTrimSmithingTemplate,
  SheafPotterySherd,
  Shears,
  SheepSpawnEgg,
  ShelterPotterySherd,
  Shield,
  ShortGrass,
  Shroomlight,
  ShulkerBox,
  ShulkerShell,
  ShulkerSpawnEgg,
  SilenceArmorTrimSmithingTemplate,
  SilverfishSpawnEgg,
  SkeletonHorseSpawnEgg,
  SkeletonSkull,
  SkeletonSpawnEgg,
  SkullBannerPattern,
  SkullPotterySherd,
  SlimeBall,
  SlimeBlock,
  SlimeSpawnEgg,
  SmallAmethystBud,
  SmallDripleaf,
  SmithingTable,
  Smoker,
  SmoothBasalt,
  SmoothQuartz,
  SmoothQuartzSlab,
  SmoothQuartzStairs,
  SmoothRedSandstone,
  SmoothRedSandstoneSlab,
  SmoothRedSandstoneStairs,
  SmoothSandstone,
  SmoothSandstoneSlab,
  SmoothSandstoneStairs,
  SmoothStone,
  SmoothStoneSlab,
  SnifferEgg,
  SnifferSpawnEgg,
  SnortPotterySherd,
  SnoutArmorTrimSmithingTemplate,
  Snow,
  SnowBlock,
  SnowGolemSpawnEgg,
  Snowball,
  SoulCampfire,
  SoulLantern,
  SoulSand,
  SoulSoil,
  SoulTorch,
  Spawner,
  SpectralArrow,
  SpiderEye,
  SpiderSpawnEgg,
  SpireArmorTrimSmithingTemplate,
  SplashPotion,
  Sponge,
  SporeBlossom,
  SpruceBoat,
  SpruceButton,
  SpruceChestBoat,
  SpruceDoor,
  SpruceFence,
  SpruceFenceGate,
  SpruceHangingSign,
  SpruceLeaves,
  SpruceLog,
  SprucePlanks,
  SprucePressurePlate,
  SpruceSapling,
  SpruceSign,
  SpruceSlab,
  SpruceStairs,
  SpruceTrapdoor,
  SpruceWood,
  Spyglass,
  SquidSpawnEgg,
  Stick,
  StickyPiston,
  Stone,
  StoneAxe,
  StoneBrickSlab,
  StoneBrickStairs,
  StoneBrickWall,
  StoneBricks,
  StoneButton,
  StoneHoe,
  StonePickaxe,
  StonePressurePlate,
  StoneShovel,
  StoneSlab,
  StoneStairs,
  StoneSword,
  Stonecutter,
  StraySpawnEgg,
  StriderSpawnEgg,
  String,
  StrippedAcaciaLog,
  StrippedAcaciaWood,
  StrippedBambooBlock,
  StrippedBirchLog,
  StrippedBirchWood,
  StrippedCherryLog,
  StrippedCherryWood,
  StrippedCrimsonHyphae,
  StrippedCrimsonStem,
  StrippedDarkOakLog,
  StrippedDarkOakWood,
  StrippedJungleLog,
  StrippedJungleWood,
  StrippedMangroveLog,
  StrippedMangroveWood,
  StrippedOakLog,
  StrippedOakWood,
  StrippedSpruceLog,
  StrippedSpruceWood,
  StrippedWarpedHyphae,
  StrippedWarpedStem,
  StructureBlock,
  StructureVoid,
  Sugar,
  SugarCane,
  Sunflower,
  SuspiciousGravel,
  SuspiciousSand,
  SuspiciousStew,
  SweetBerries,
  TadpoleBucket,
  TadpoleSpawnEgg,
  TallGrass,
  Target,
  Terracotta,
  TideArmorTrimSmithingTemplate,
  TintedGlass,
  TippedArrow,
  Tnt,
  TntMinecart,
  Torch,
  Torchflower,
  TorchflowerSeeds,
  TotemOfUndying,
  TraderLlamaSpawnEgg,
  TrappedChest,
  TrialKey,
  TrialSpawner,
  Trident,
  TripwireHook,
  TropicalFish,
  TropicalFishBucket,
  TropicalFishSpawnEgg,
  TubeCoral,
  TubeCoralBlock,
  TubeCoralFan,
  Tuff,
  TuffBrickSlab,
  TuffBrickStairs,
  TuffBrickWall,
  TuffBricks,
  TuffSlab,
  TuffStairs,
  TuffWall,
  TurtleEgg,
  TurtleHelmet,
  TurtleSpawnEgg,
  TwistingVines,
  VerdantFroglight,
  VexArmorTrimSmithingTemplate,
  VexSpawnEgg,
  VillagerSpawnEgg,
  VindicatorSpawnEgg,
  Vine,
  WanderingTraderSpawnEgg,
  WardArmorTrimSmithingTemplate,
  WardenSpawnEgg,
  WarpedButton,
  WarpedDoor,
  WarpedFence,
  WarpedFenceGate,
  WarpedFungus,
  WarpedFungusOnAStick,
  WarpedHangingSign,
  WarpedHyphae,
  WarpedNylium,
  WarpedPlanks,
  WarpedPressurePlate,
  WarpedRoots,
  WarpedSign,
  WarpedSlab,
  WarpedStairs,
  WarpedStem,
  WarpedTrapdoor,
  WarpedWartBlock,
  WaterBucket,
  WaxedChiseledCopper,
  WaxedCopperBlock,
  WaxedCopperBulb,
  WaxedCopperDoor,
  WaxedCopperGrate,
  WaxedCopperTrapdoor,
  WaxedCutCopper,
  WaxedCutCopperSlab,
  WaxedCutCopperStairs,
  WaxedExposedChiseledCopper,
  WaxedExposedCopper,
  WaxedExposedCopperBulb,
  WaxedExposedCopperDoor,
  WaxedExposedCopperGrate,
  WaxedExposedCopperTrapdoor,
  WaxedExposedCutCopper,
  WaxedExposedCutCopperSlab,
  WaxedExposedCutCopperStairs,
  WaxedOxidizedChiseledCopper,
  WaxedOxidizedCopper,
  WaxedOxidizedCopperBulb,
  WaxedOxidizedCopperDoor,
  WaxedOxidizedCopperGrate,
  WaxedOxidizedCopperTrapdoor,
  WaxedOxidizedCutCopper,
  WaxedOxidizedCutCopperSlab,
  WaxedOxidizedCutCopperStairs,
  WaxedWeatheredChiseledCopper,
  WaxedWeatheredCopper,
  WaxedWeatheredCopperBulb,
  WaxedWeatheredCopperDoor,
  WaxedWeatheredCopperGrate,
  WaxedWeatheredCopperTrapdoor,
  WaxedWeatheredCutCopper,
  WaxedWeatheredCutCopperSlab,
  WaxedWeatheredCutCopperStairs,
  WayfinderArmorTrimSmithingTemplate,
  WeatheredChiseledCopper,
  WeatheredCopper,
  WeatheredCopperBulb,
  WeatheredCopperDoor,
  WeatheredCopperGrate,
  WeatheredCopperTrapdoor,
  WeatheredCutCopper,
  WeatheredCutCopperSlab,
  WeatheredCutCopperStairs,
  WeepingVines,
  WetSponge,
  Wheat,
  WheatSeeds,
  WhiteBanner,
  WhiteBed,
  WhiteCandle,
  WhiteCarpet,
  WhiteConcrete,
  WhiteConcretePowder,
  WhiteDye,
  WhiteGlazedTerracotta,
  WhiteShulkerBox,
  WhiteStainedGlass,
  WhiteStainedGlassPane,
  WhiteTerracotta,
  WhiteTulip,
  WhiteWool,
  WildArmorTrimSmithingTemplate,
  WitchSpawnEgg,
  WitherRose,
  WitherSkeletonSkull,
  WitherSkeletonSpawnEgg,
  WitherSpawnEgg,
  WolfSpawnEgg,
  WoodenAxe,
  WoodenHoe,
  WoodenPickaxe,
  WoodenShovel,
  WoodenSword,
  WritableBook,
  WrittenBook,
  YellowBanner,
  YellowBed,
  YellowCandle,
  YellowCarpet,
  YellowConcrete,
  YellowConcretePowder,
  YellowDye,
  YellowGlazedTerracotta,
  YellowShulkerBox,
  YellowStainedGlass,
  YellowStainedGlassPane,
  YellowTerracotta,
  YellowWool,
  ZoglinSpawnEgg,
  ZombieHead,
  ZombieHorseSpawnEgg,
  ZombieSpawnEgg,
  ZombieVillagerSpawnEgg,
  ZombifiedPiglinSpawnEgg,
}

export interface Item {
  Type: ItemType
  Count: number
  Data: number
  NBT?: any
  IsEmpty: boolean
  DisplayName?: any
  Lores?: any
  Damage: number
}

export interface Location {
  X: number
  Y: number
  Z: number
  Status: number
  ChunkX: number
  ChunkY: number
  ChunkZ: number
  ChunkBlockX: number
  ChunkBlockY: number
  ChunkBlockZ: number
}

export interface MapIcon {
  type: MapIconType
  x: number
  z: number
  direction: number
  displayName: string
}

export enum MapIconType {
  White_Arrow = 0,
  Green_Arrow,
  Red_Arrow,
  Blue_Arrow,
  White_Cross,
  Red_Pointer,
  White_Circle,
  Small_White_Circle,
  Mansion,
  Temple,
  White_Banner,
  Orange_Banner,
  Magenta_Banner,
  Light_Blue_Banner,
  Yellow_Banner,
  Lime_Banner,
  Pink_Banner,
  Gray_Banner,
  Light_Gray_Banner,
  Cyan_Banner,
  Purple_Banner,
  Blue_Banner,
  Brown_Banner,
  Green_Banner,
  Red_Banner,
  Black_Banner,
  Treasure_Marker,
}

export enum ProtocolVersion {
  MC_1_8_Version = 47,
  MC_1_9_Version = 107,
  MC_1_9_1_Version = 108,
  MC_1_10_Version = 210,
  MC_1_11_2_Version = 316,
  MC_1_12_Version = 335,
  MC_1_12_2_Version = 340,
  MC_1_13_Version = 393,
  MC_1_13_2_Version = 404,
  MC_1_14_Version = 477,
  MC_1_15_Version = 573,
  MC_1_15_2_Version = 578,
  MC_1_16_Version = 735,
  MC_1_16_1_Version = 736,
  MC_1_16_2_Version = 751,
  MC_1_16_3_Version = 753,
  MC_1_16_5_Version = 754,
  MC_1_17_Version = 755,
  MC_1_17_1_Version = 756,
  MC_1_18_1_Version = 757,
  MC_1_18_2_Version = 758,
  MC_1_19_Version = 759,
  MC_1_19_2_Version = 760,
}

export enum WindowActionType {
  /** Left click with mouse on a slot: grab or drop a whole item stack */
  LeftClick,
  /** Right click with mouse on a slot: grab half a stack or drop a single item */
  RightClick,
  /** Middle click with mouse on a slot: grab a full stack from creative inventory */
  MiddleClick,
  /** Shift+Left click with mouse on a slot: send a whole item stack to the hotbar or other inventory */
  ShiftClick,
  /** Drop a single item on ground */
  DropItem,
  /** Drop a whole item stack on ground */
  DropItemStack,
  /** Start hovering slots with left button pressed: Distribute evenly the stack on hovered slots */
  StartDragLeft,
  /** Start hovering slots with right button pressed: Drop one item on each hovered slot */
  StartDragRight,
  /** Start hovering slots with middle button pressed: Create one item stack on each hovered slot in creative mode */
  StartDragMiddle,
  /** Hover a slot to distribute evenly an item stack */
  AddDragLeft,
  /** Hover a slot to drop one item from an item stack */
  AddDragRight,
  /** Hover a slot to create one item stack in creative mode */
  AddDragMiddle,
  /** Stop hovering slots with left button pressed */
  EndDragLeft,
  /** Stop hovering slots with right button pressed */
  EndDragRight,
  /** Stop hovering slots with middble button pressed */
  EndDragMiddle,
}

export type GameMode = "unknown" | "survival" | "creative" | "adventure" | "spectator"

export interface Inventory {
  ID: number
  Type: number
  Title: string
  StateID: number
  Items: Record<number, Item>
  Properties: any
}
